        -:    0:Source:cardtest1.c
        -:    0:Graph:cardtest1.gcno
        -:    0:Data:cardtest1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "string.h"
        -:    4:#include <stdio.h>
        -:    5:#include "rngs.h"
        -:    6:#include <stdlib.h>
        -:    7:
        1:    8:void testSmithy()
        -:    9:{
        1:   10:    int numOfPlayers = 2; 
        1:   11:    int extraCards = 0;
        1:   12:    int handpos = 0, choice1 = 0, choice2 = 0, choice3 = 0, bonus = 0;
        1:   13:    int randomSeed = 100;
        1:   14:    int thisPlayer = 0;
        1:   15:    int k[10] = {adventurer, gardens, embargo, village, minion, mine, cutpurse,
        -:   16:                 sea_hag, tribute, smithy};
        -:   17:    struct gameState G, testG;
        -:   18:
        1:   19:    initializeGame(numOfPlayers, k, randomSeed, &G);
        -:   20:
        1:   21:    memcpy(&testG, &G, sizeof(struct gameState));
        -:   22:
        1:   23:    cardEffect(smithy, choice1, choice2, choice3, &testG, handpos, &bonus);
        -:   24:
        1:   25:    extraCards = 3;
        -:   26:
        1:   27:    if (testG.handCount[thisPlayer] == G.handCount[thisPlayer] + extraCards)
    #####:   28:        printf("Test smithy card : PASS if hand count for player %d = %d.\n", thisPlayer, G.handCount[thisPlayer] + extraCards);
        -:   29:    else
        1:   30:        printf("Test smithy card : FAIL if hand count for player %d != %d.\n", thisPlayer, G.handCount[thisPlayer] + extraCards);
        -:   31:
        1:   32:    if (testG.deckCount[thisPlayer] == G.deckCount[thisPlayer] - extraCards)
    #####:   33:        printf("Test smithy card : PASS if deck count for player %d = %d.\n", thisPlayer, G.deckCount[thisPlayer] - extraCards);
        -:   34:    else
        1:   35:        printf("Test smithy card : FAIL if deck count for player %d != %d.\n", thisPlayer, G.deckCount[thisPlayer] - extraCards);
        1:   36:}
        -:   37:
        1:   38:int main(int argc, char **argv)
        -:   39:{
        1:   40:    testSmithy();
        -:   41:
        1:   42:    return 0;
        -:   43:}
